<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on -O-</title>
    <link>https://shiniao.fun/tags/python/</link>
    <description>Recent content in Python on -O-</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 04 Jul 2019 11:19:00 +0800</lastBuildDate><atom:link href="https://shiniao.fun/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[源码分析] Flask中路由匹配是如何实现的</title>
      <link>https://shiniao.fun/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90flask%E4%B8%AD%E8%B7%AF%E7%94%B1%E5%8C%B9%E9%85%8D%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84/</link>
      <pubDate>Thu, 04 Jul 2019 11:19:00 +0800</pubDate>
      
      <guid>https://shiniao.fun/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90flask%E4%B8%AD%E8%B7%AF%E7%94%B1%E5%8C%B9%E9%85%8D%E6%98%AF%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E7%9A%84/</guid>
      <description>首先让我们来了解下WSGI规范是啥？ 简单来说，WSGI是服务器和应用之间的接口，前端过来的请求传到服务器之后比如gunicorn，之后服务器会将请求转发给应用。因为有很多个服务器，如果我们为我们的应用</description>
    </item>
    
    <item>
      <title>[源码分析] Flask配置管理与描述符析</title>
      <link>https://shiniao.fun/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90flask%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E4%B8%8E%E6%8F%8F%E8%BF%B0%E7%AC%A6/</link>
      <pubDate>Wed, 03 Jul 2019 11:19:00 +0800</pubDate>
      
      <guid>https://shiniao.fun/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90flask%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E4%B8%8E%E6%8F%8F%E8%BF%B0%E7%AC%A6/</guid>
      <description>在Flask中可以通过 app.config[&amp;lsquo;NAME&amp;rsquo;] = what 的形式指定一些配置，比如设置 debug = True ： app.debug = True # 或者 app.config[&amp;#39;DEBUG&amp;#39;] = True 有些配置比如设置ENV和TESTING还可以直接利用Flask对象来设置，像这样： app.testing = True 除了在程序中指定配置，也可以将</description>
    </item>
    
    <item>
      <title>[源码分析] Flask蓝图实现原理分析</title>
      <link>https://shiniao.fun/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90flask%E8%93%9D%E5%9B%BE%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 01 Jul 2019 11:19:00 +0800</pubDate>
      
      <guid>https://shiniao.fun/posts/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90flask%E8%93%9D%E5%9B%BE%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</guid>
      <description>看这篇文章之前，建议看一下我之前写的：[源码分析]Flask中路由匹配是如何实现的 BluePrint（蓝图）的概念说白了就是路由组，所有注册到该蓝图上的路由都使用同一个前缀。这样方便了管理，不同的功能</description>
    </item>
    
    <item>
      <title>对Python并发编程的思考</title>
      <link>https://shiniao.fun/posts/%E5%AF%B9python%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E6%80%9D%E8%80%83/</link>
      <pubDate>Thu, 11 Jan 2018 22:02:53 +0800</pubDate>
      
      <guid>https://shiniao.fun/posts/%E5%AF%B9python%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E7%9A%84%E6%80%9D%E8%80%83/</guid>
      <description>为了提高系统密集型运算的效率，我们常常会使用到多个进程或者是多个线程，python中的Threading包实现了线程，multiprocessing 包则实现了多进程。而在3.2版本的python中，将</description>
    </item>
    
  </channel>
</rss>
